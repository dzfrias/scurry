"use strict";(self.webpackChunkwebsite=self.webpackChunkwebsite||[]).push([[171],{3905:(e,t,r)=>{r.d(t,{Zo:()=>u,kt:()=>y});var n=r(7294);function a(e,t,r){return t in e?Object.defineProperty(e,t,{value:r,enumerable:!0,configurable:!0,writable:!0}):e[t]=r,e}function o(e,t){var r=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);t&&(n=n.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),r.push.apply(r,n)}return r}function i(e){for(var t=1;t<arguments.length;t++){var r=null!=arguments[t]?arguments[t]:{};t%2?o(Object(r),!0).forEach((function(t){a(e,t,r[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(r)):o(Object(r)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(r,t))}))}return e}function l(e,t){if(null==e)return{};var r,n,a=function(e,t){if(null==e)return{};var r,n,a={},o=Object.keys(e);for(n=0;n<o.length;n++)r=o[n],t.indexOf(r)>=0||(a[r]=e[r]);return a}(e,t);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(n=0;n<o.length;n++)r=o[n],t.indexOf(r)>=0||Object.prototype.propertyIsEnumerable.call(e,r)&&(a[r]=e[r])}return a}var p=n.createContext({}),s=function(e){var t=n.useContext(p),r=t;return e&&(r="function"==typeof e?e(t):i(i({},t),e)),r},u=function(e){var t=s(e.components);return n.createElement(p.Provider,{value:t},e.children)},c={inlineCode:"code",wrapper:function(e){var t=e.children;return n.createElement(n.Fragment,{},t)}},m=n.forwardRef((function(e,t){var r=e.components,a=e.mdxType,o=e.originalType,p=e.parentName,u=l(e,["components","mdxType","originalType","parentName"]),m=s(r),y=a,d=m["".concat(p,".").concat(y)]||m[y]||c[y]||o;return r?n.createElement(d,i(i({ref:t},u),{},{components:r})):n.createElement(d,i({ref:t},u))}));function y(e,t){var r=arguments,a=t&&t.mdxType;if("string"==typeof e||a){var o=r.length,i=new Array(o);i[0]=m;var l={};for(var p in t)hasOwnProperty.call(t,p)&&(l[p]=t[p]);l.originalType=e,l.mdxType="string"==typeof e?e:a,i[1]=l;for(var s=2;s<o;s++)i[s]=r[s];return n.createElement.apply(null,i)}return n.createElement.apply(null,r)}m.displayName="MDXCreateElement"},2092:(e,t,r)=>{r.r(t),r.d(t,{assets:()=>p,contentTitle:()=>i,default:()=>c,frontMatter:()=>o,metadata:()=>l,toc:()=>s});var n=r(7462),a=(r(7294),r(3905));const o={sidebar_position:6},i="Map",l={unversionedId:"tutorial-basics/types/map",id:"tutorial-basics/types/map",title:"Map",description:"The builtin Map type in Scurry.",source:"@site/docs/tutorial-basics/types/map.md",sourceDirName:"tutorial-basics/types",slug:"/tutorial-basics/types/map",permalink:"/scurry/docs/tutorial-basics/types/map",draft:!1,tags:[],version:"current",sidebarPosition:6,frontMatter:{sidebar_position:6},sidebar:"tutorialSidebar",previous:{title:"Array",permalink:"/scurry/docs/tutorial-basics/types/array"},next:{title:"Tutorial - Extras",permalink:"/scurry/docs/category/tutorial---extras"}},p={},s=[{value:"Behavior",id:"behavior",level:2},{value:"Methods",id:"methods",level:2},{value:"keys()",id:"keys",level:3},{value:"values()",id:"values",level:3},{value:"remove(item: Any)",id:"removeitem-any",level:3},{value:"merge(map: Map)",id:"mergemap-map",level:3}],u={toc:s};function c(e){let{components:t,...r}=e;return(0,a.kt)("wrapper",(0,n.Z)({},u,r,{components:t,mdxType:"MDXLayout"}),(0,a.kt)("h1",{id:"map"},"Map"),(0,a.kt)("p",null,"The builtin Map type in Scurry."),(0,a.kt)("h2",{id:"behavior"},"Behavior"),(0,a.kt)("p",null,"The ",(0,a.kt)("inlineCode",{parentName:"p"},"Map")," type is similar to a hashmap or dictionary in other languages. "),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},"Does ",(0,a.kt)("strong",{parentName:"li"},"not")," remember the insertion order of items"),(0,a.kt)("li",{parentName:"ul"},"Keys can be ",(0,a.kt)("a",{parentName:"li",href:"String"},"strings"),", ",(0,a.kt)("a",{parentName:"li",href:"Int"},"integers"),", or ",(0,a.kt)("a",{parentName:"li",href:"Bool"},"booleans")),(0,a.kt)("li",{parentName:"ul"},"O(1) lookup times"),(0,a.kt)("li",{parentName:"ul"},"Can be indexed",(0,a.kt)("pre",{parentName:"li"},(0,a.kt)("code",{parentName:"pre"},'>> {"key": "value", 44: 99}[44];\n99\n'))),(0,a.kt)("li",{parentName:"ul"},"Can be looped through",(0,a.kt)("pre",{parentName:"li"},(0,a.kt)("code",{parentName:"pre"},'>> for key in {1: 4, "a": True} { println(key); }\n1\na\n'))),(0,a.kt)("li",{parentName:"ul"},"False when empty")),(0,a.kt)("h2",{id:"methods"},"Methods"),(0,a.kt)("h3",{id:"keys"},"keys()"),(0,a.kt)("p",null,"Returns an ",(0,a.kt)("a",{parentName:"p",href:"Array"},"Array")," of the keys of the map. Note that these will be\nreturned in no particular order."),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre"},'>> {True: 10.3, "key": [1, 2, 3]}.keys();\n[True, "key"]\n')),(0,a.kt)("h3",{id:"values"},"values()"),(0,a.kt)("p",null,"Returns an ",(0,a.kt)("a",{parentName:"p",href:"Array"},"Array")," of the values of the map. Note that these will be\nreturned in no particular order."),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre"},'>> {True: 10.3, "key": [1, 2, 3]}.values();\n[10.3, [1, 2, 3]]\n')),(0,a.kt)("h3",{id:"removeitem-any"},"remove(item: Any)"),(0,a.kt)("p",null,"Removes an item from the map."),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre"},">> x = {3: 3};\n\n>> x.remove(3);\nNil\n\n>> x;\n{}\n")),(0,a.kt)("h3",{id:"mergemap-map"},"merge(map: Map)"),(0,a.kt)("p",null,"Merges the map with another."),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre"},">> x = {1: 3};\n\n>> x.extend({3: 1});\n\n>> x;\n{1: 3, 3: 1}\n")))}c.isMDXComponent=!0}}]);