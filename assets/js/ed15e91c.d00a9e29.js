"use strict";(self.webpackChunkwebsite=self.webpackChunkwebsite||[]).push([[111],{3905:(e,t,r)=>{r.d(t,{Zo:()=>c,kt:()=>m});var n=r(7294);function a(e,t,r){return t in e?Object.defineProperty(e,t,{value:r,enumerable:!0,configurable:!0,writable:!0}):e[t]=r,e}function o(e,t){var r=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);t&&(n=n.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),r.push.apply(r,n)}return r}function i(e){for(var t=1;t<arguments.length;t++){var r=null!=arguments[t]?arguments[t]:{};t%2?o(Object(r),!0).forEach((function(t){a(e,t,r[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(r)):o(Object(r)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(r,t))}))}return e}function l(e,t){if(null==e)return{};var r,n,a=function(e,t){if(null==e)return{};var r,n,a={},o=Object.keys(e);for(n=0;n<o.length;n++)r=o[n],t.indexOf(r)>=0||(a[r]=e[r]);return a}(e,t);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(n=0;n<o.length;n++)r=o[n],t.indexOf(r)>=0||Object.prototype.propertyIsEnumerable.call(e,r)&&(a[r]=e[r])}return a}var p=n.createContext({}),s=function(e){var t=n.useContext(p),r=t;return e&&(r="function"==typeof e?e(t):i(i({},t),e)),r},c=function(e){var t=s(e.components);return n.createElement(p.Provider,{value:t},e.children)},u={inlineCode:"code",wrapper:function(e){var t=e.children;return n.createElement(n.Fragment,{},t)}},f=n.forwardRef((function(e,t){var r=e.components,a=e.mdxType,o=e.originalType,p=e.parentName,c=l(e,["components","mdxType","originalType","parentName"]),f=s(r),m=a,d=f["".concat(p,".").concat(m)]||f[m]||u[m]||o;return r?n.createElement(d,i(i({ref:t},c),{},{components:r})):n.createElement(d,i({ref:t},c))}));function m(e,t){var r=arguments,a=t&&t.mdxType;if("string"==typeof e||a){var o=r.length,i=new Array(o);i[0]=f;var l={};for(var p in t)hasOwnProperty.call(t,p)&&(l[p]=t[p]);l.originalType=e,l.mdxType="string"==typeof e?e:a,i[1]=l;for(var s=2;s<o;s++)i[s]=r[s];return n.createElement.apply(null,i)}return n.createElement.apply(null,r)}f.displayName="MDXCreateElement"},1821:(e,t,r)=>{r.r(t),r.d(t,{assets:()=>p,contentTitle:()=>i,default:()=>u,frontMatter:()=>o,metadata:()=>l,toc:()=>s});var n=r(7462),a=(r(7294),r(3905));const o={sidebar_position:2},i="Float",l={unversionedId:"tutorial-basics/types/float",id:"tutorial-basics/types/float",title:"Float",description:"The float implementation in Scurry. The Float type supports 32-bit floating",source:"@site/docs/tutorial-basics/types/float.md",sourceDirName:"tutorial-basics/types",slug:"/tutorial-basics/types/float",permalink:"/scurry/docs/tutorial-basics/types/float",draft:!1,tags:[],version:"current",sidebarPosition:2,frontMatter:{sidebar_position:2},sidebar:"tutorialSidebar",previous:{title:"Int",permalink:"/scurry/docs/tutorial-basics/types/int"},next:{title:"Bool",permalink:"/scurry/docs/tutorial-basics/types/bool"}},p={},s=[{value:"Behavior",id:"behavior",level:2},{value:"Methods",id:"methods",level:2},{value:"abs()",id:"abs",level:3},{value:"to_int()",id:"to_int",level:3}],c={toc:s};function u(e){let{components:t,...r}=e;return(0,a.kt)("wrapper",(0,n.Z)({},c,r,{components:t,mdxType:"MDXLayout"}),(0,a.kt)("h1",{id:"float"},"Float"),(0,a.kt)("p",null,"The float implementation in Scurry. The ",(0,a.kt)("inlineCode",{parentName:"p"},"Float")," type supports 32-bit floating\npoint numbers and all the normal arithmetic operations (",(0,a.kt)("inlineCode",{parentName:"p"},"+"),", ",(0,a.kt)("inlineCode",{parentName:"p"},"-"),", etc.)."),(0,a.kt)("h2",{id:"behavior"},"Behavior"),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},"Seamless interaction with the ",(0,a.kt)("a",{parentName:"li",href:"int"},"Int")," type",(0,a.kt)("pre",{parentName:"li"},(0,a.kt)("code",{parentName:"pre"},">> 2.3 + 1;\n3.3\n"))),(0,a.kt)("li",{parentName:"ul"},"Falsey when ",(0,a.kt)("inlineCode",{parentName:"li"},"0.0")),(0,a.kt)("li",{parentName:"ul"},"No NaN's or infinites")),(0,a.kt)("h2",{id:"methods"},"Methods"),(0,a.kt)("p",null,"The ",(0,a.kt)("inlineCode",{parentName:"p"},"Float")," type has the following methods."),(0,a.kt)("h3",{id:"abs"},"abs()"),(0,a.kt)("p",null,"Converts the float to it's absolute value."),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre"},">> (-1.0).abs();\n1.0\n\n>> 1.0.abs();\n1.0\n")),(0,a.kt)("h3",{id:"to_int"},"to_int()"),(0,a.kt)("p",null,"Casts the float to the ",(0,a.kt)("a",{parentName:"p",href:"int"},"Int")," type. This method will truncate every digit\nafter the ",(0,a.kt)("inlineCode",{parentName:"p"},"."),"."),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre"},">> 1.9.to_int();\n1\n")))}u.isMDXComponent=!0}}]);